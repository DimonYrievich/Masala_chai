
import telebot      # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram API
import time         # –ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º
from Database import*
from Search_engine import*
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton   # –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è Inline-–∫–Ω–æ–ø–æ–∫
from dotenv import load_dotenv


# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
load_dotenv()

TOKEN = os.getenv("TOKEN")
bot = telebot.TeleBot(TOKEN)
ADMIN_ID = int(os.getenv("ADMIN_ID"))        # ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –±–æ—Ç–∞, –∫—É–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ä–µ—Ü–µ–ø—Ç—ã –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É


# –°–æ–∑–¥–∞—ë–º —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Ç.–∫. –¢-bot –±—É–¥–µ—Ç –º–Ω–æ–≥–æ–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π.

user_data = {}


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –µ–≥–æ –µ—â—ë –Ω–µ—Ç –≤ user_data

def init_user_data(user_id):
    if user_id not in user_data:
        user_data[user_id] = {
            "selected_ingredients": set(),
            "recipe_from_user": {
                "–ù–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞": "",
                "–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã": [],
                "–°–ø–æ—Å–æ–± –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è": ""
            }
        }



# –°–æ–∑–¥–∞–µ–º inline-–∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—É—Ç–∏:

def inline_menu():
    keyboard = InlineKeyboardMarkup(row_width = 1)  # row_width = 1 —Å—Ç–∞–≤–∏—Ç –∫–Ω–æ–ø–∫–∏ –≤ –æ–¥–∏–Ω —Å—Ç–æ–ª–±–∏–∫
    keyboard.add(
        InlineKeyboardButton("–ü–µ—Ä–≤—ã–π –ø—É—Ç—å", callback_data = "first"),
        InlineKeyboardButton("–í—Ç–æ—Ä–æ–π –ø—É—Ç—å", callback_data = "second"),
        InlineKeyboardButton("–¢—Ä–µ—Ç–∏–π –ø—É—Ç—å", callback_data = "third")
    )
    return keyboard

# –°–æ–∑–¥–∞–µ–º inline-–∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤:

def inline_ingredients():
    keyboard = InlineKeyboardMarkup(row_width=1)  # row_width=1 —Å–¥–µ–ª–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ –ø–æ 1 –≤ —Ä—è–¥
    buttons = [InlineKeyboardButton(ingredient, callback_data = ingredient) for ingredient in ingredients]  # –°–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫ —Å –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º–∏
    keyboard.add(*buttons)  # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ä–∞–∑—É –≤—Å–µ –∫–Ω–æ–ø–∫–∏ –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã
    keyboard.add(InlineKeyboardButton("‚úÖ –ì–æ—Ç–æ–≤–æ", callback_data="done"))  # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞
    return keyboard

# –°–æ–∑–¥–∞–µ–º inline-–∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –±–ª—é–¥–∞ –∏–∑ –º–µ–Ω—é –æ—Ç —à–µ—Ñ-–ø–æ–≤–∞—Ä–∞:

def inline_dishes():
    keyboard = InlineKeyboardMarkup(row_width=1)  # row_width=1 —Å–¥–µ–ª–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ –ø–æ 1 –≤ —Ä—è–¥
    buttons = [InlineKeyboardButton(dish, callback_data = dish) for dish in menu.keys()]  # –°–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫ —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –±–ª—é–¥
    keyboard.add(*buttons)  # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ä–∞–∑—É –≤—Å–µ –∫–Ω–æ–ø–∫–∏ –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã
    return keyboard

# –°–æ–∑–¥–∞–µ–º inline-–∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –±–ª—é–¥–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –±–ª—é–¥:

def inline_possible_dishes(possible_dishes):
    keyboard = InlineKeyboardMarkup(row_width=1)  # row_width=1 —Å–¥–µ–ª–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ –ø–æ 1 –≤ —Ä—è–¥
    buttons = [InlineKeyboardButton(dish, callback_data = dish) for dish in possible_dishes]  # –°–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫ —Å –≤–æ–∑–º–æ–∂–Ω—ã–º–∏ –±–ª—é–¥–∞–º–∏
    keyboard.add(*buttons)  # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ä–∞–∑—É –≤—Å–µ –∫–Ω–æ–ø–∫–∏ –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã
    return keyboard

# –°–æ–∑–¥–∞–µ–º inline-–∫–Ω–æ–ø–∫–∏ –¥–ª—è feedback:

def inline_feedback():
    keyboard = InlineKeyboardMarkup(row_width=1)
    keyboard.add(
        InlineKeyboardButton("–•–æ—á—É –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å–≤–æ–π —Ä–µ—Ü–µ–ø—Ç –±–ª—é–¥–∞", callback_data="write"),
        InlineKeyboardButton("–•–æ—á—É –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è", callback_data="complaint"),
        InlineKeyboardButton("–ù–∏—á–µ–≥–æ –Ω–µ —Ö–æ—á—É, –º–µ–Ω—è –≤—Å—ë —É—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç", callback_data="cancel")
    )
    return keyboard

# –°–æ–∑–¥–∞–µ–º inline-–∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–ª–∏ –æ—Ç–º–µ–Ω—ã –Ω–æ–≤–æ–≥–æ —Ä–µ—Ü–µ–ø—Ç–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:

def inline_send_recipe_to_admin():
    keyboard = InlineKeyboardMarkup(row_width=2)
    keyboard.add(
        InlineKeyboardButton("–î–∞, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å", callback_data="send_recipe"),
        InlineKeyboardButton("–ù–µ—Ç, –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å", callback_data="cancel_recipe"),
    )
    return keyboard

# –°–æ–∑–¥–∞–µ–º inline-–∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–∞–π—Ç–∞, –≥–¥–µ –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å—Å—è –ø–æ–∏—Å–∫ —Ä–µ—Ü–µ–ø—Ç–æ–≤:

def inline_site():
    keyboard = InlineKeyboardMarkup(row_width=1)
    keyboard.add(
        InlineKeyboardButton("eda.ru", callback_data="site_edaru"),
        InlineKeyboardButton("1000.menu", callback_data="site_1000menu"),
        InlineKeyboardButton("iamcook.ru", callback_data="site_iamcook")
    )
    return keyboard



# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥:

@bot.message_handler(commands=['description'])
def handle_description(message: telebot.types.Message):
    text = "–≠—Ç–æ—Ç –±–æ—Ç:\n" \
           "- –ø–æ–¥–±–µ—Ä—ë—Ç —Ä–µ—Ü–µ–ø—Ç—ã –±–ª—é–¥ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å —É —Ç–µ–±—è –¥–æ–º–∞;\n" \
           "- –ø–æ–º–æ–∂–µ—Ç –Ω–∞–π—Ç–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Ä–µ—Ü–µ–ø—Ç –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –∂–µ–ª–∞–µ–º–æ–≥–æ –±–ª—é–¥–∞;\n" \
           "- –ø—Ä–µ–¥–ª–æ–∂–∏—Ç —Ä–µ—Ü–µ–ø—Ç—ã –±–ª—é–¥ –∏–∑ —Å–ø–∏—Å–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –ø–æ–ø–æ–ª–Ω—è–µ—Ç—Å—è;\n" \
           "- —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å–≤–æ–π —Ä–µ—Ü–µ–ø—Ç, –ø–µ—Ä–µ–π–¥—è –≤ –ú–µ–Ω—é -> –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å -> –•–æ—á—É –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å–≤–æ–π —Ä–µ—Ü–µ–ø—Ç\n\n" \
           "–î–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤ –ª–µ–≤–æ–º –Ω–∏–∂–Ω–µ–º —É–≥–ª—É –µ—Å—Ç—å '–ú–µ–Ω—é'.\n\n" \
           "–í—Å—è —Ä–∞–±–æ—Ç–∞ —Å –±–æ—Ç–æ–º –ø–æ—Å—Ç—Ä–æ–µ–Ω–∞ –Ω–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: —á–∏—Ç–∞–π, –≤—ã–±–∏—Ä–∞–π, –∂–º–∞–∫–∞–π –ø–æ –∫–Ω–æ–ø–∫–∞–º, –ø–∏—à–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–π —Å–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è.\n\n" \
           "–ò–Ω–æ–≥–¥–∞ –±—É–¥—É—Ç –ø–æ—è–≤–ª—è—Ç—å—Å—è –Ω–æ–≤–æ—Å—Ç–∏ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–º —Ä–∞–∑–¥–µ–ª–µ '–ú–µ–Ω—é'. –û –Ω–æ–≤—ã—Ö —Ä–µ—Ü–µ–ø—Ç–∞—Ö –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö —Ç—ã —Å–º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å —Ç–∞–º.\n\n" \
           "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç—Å—è —Å–æ–¥–µ–π—Å—Ç–≤–∏–µ –≤ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –±–ª—é–¥:) –ü—Ä–∏—Å—ã–ª–∞–π —Å–≤–æ–∏ —Ä–µ—Ü–µ–ø—Ç—ã. –ï—Å–ª–∏ –ª–µ–Ω—å –ø–∏—Å–∞—Ç—å —Ä—É–∫–∞–º–∏, —Ç–æ –º–æ–∂–µ—à—å —Å–∫–∏–Ω—É—Ç—å —Å—Å—ã–ª–∫—É. –ê–¥–º–∏–Ω –ø—Ä–æ–≤–µ—Ä–∏—Ç, –ø–æ–ø—Ä–æ–±—É–µ—Ç –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å –∏ –≤–Ω–µ—Å—ë—Ç –≤ —Å–ø–∏—Å–æ–∫."
    bot.reply_to(message, text)

@bot.message_handler(commands=['start'])
def tutorial(message: telebot.types.Message):
    init_user_data(message.chat.id)
    text = "–ü—Ä–∏–≤–µ—Ç! –Ø - –±–æ—Ç. –ó–¥–µ—Å—å —è —Ä–∞—Å—Å–∫–∞–∂—É —Ç–µ–±–µ, –Ω–∞ —á—Ç–æ —è —Å–ø–æ—Å–æ–±–µ–Ω, –∏ –∫–∞–∫ –º—ã –±—É–¥–µ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –¥—Ä—É–≥ —Å –¥—Ä—É–≥–æ–º. " \
           "–õ—é–±–∏—à—å –ø–æ–µ—Å—Ç—å, –Ω–æ –Ω–µ –∑–Ω–∞–µ—à—å, —á—Ç–æ –∏ –∫–∞–∫ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å? –Ø –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å —Ç–µ–±–µ –ø–æ–º–æ—á—å.\n\n" \
           "–ò —Ç–∞–∫! –£ –Ω–∞—Å —Å —Ç–æ–±–æ–π –µ—Å—Ç—å —Ç—Ä–∏ –ø—É—Ç–∏:\n\n" \
           "    (1) –ü–µ—Ä–≤—ã–π –ø—É—Ç—å - –ø—É—Ç—å –Ω–∏—â–µ–±—Ä–æ–¥–∞. –ï—Å–ª–∏ –≤ —Ç–≤–æ–µ–º —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–µ –∑–∞–≤–∞–ª—è–ª–∏—Å—å —Ö–æ—Ç—å –∫–∞–∫–∏–µ-–Ω–∏–±—É–¥—å –ø—Ä–æ–¥—É–∫—Ç—ã, –¥–∞–π –º–Ω–µ –∑–Ω–∞—Ç—å, –∞ " \
           "—è –ø–æ–¥–±–µ—Ä—É —Ç–µ–±–µ —Ä–µ—Ü–µ–ø—Ç. –ü—Ä–æ—Å—Ç–æ –≤—ã–±–µ—Ä–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã.\n\n" \
           "    (2) –í—Ç–æ—Ä–æ–π –ø—É—Ç—å - —ç—Ç–æ –ø—É—Ç—å –∂–∏—Ä–æ–±–∞—Å–∞. –ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞, –∞ —è —Å–∫–∏–Ω—É —Ç–µ–±–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ä–µ—Ü–µ–ø—Ç –µ–≥–æ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è.\n\n" \
           "    (3) –¢—Ä–µ—Ç–∏–π –ø—É—Ç—å - –ø—É—Ç—å —Å —à–µ—Ñ-–ø–æ–≤–∞—Ä–æ–º, —Ç–æ –µ—Å—Ç—å —Å–æ –º–Ω–æ–π. –í—ã–±–µ—Ä–∏ –±–ª—é–¥–æ –∏–∑ –º–æ–µ–≥–æ –º–µ–Ω—é –∏ –ø—Ä–∏–≥–æ—Ç–æ–≤—å –µ–≥–æ.\n\n" \
           "–¢–µ–ø–µ—Ä—å –æ–ø—Ä–µ–¥–µ–ª–∏ —Å–≤–æ–π –ø—É—Ç—å. –ù–∞–ø–∏—à–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ 1, 2 –∏–ª–∏ 3, –∞ –ª—É—á—à–µ —Ç–∞–ø–Ω–∏ –ø–æ –Ω—É–∂–Ω–æ–π –∫–Ω–æ–ø–∫–µ."
    bot.send_message(message.chat.id, text, reply_markup=inline_menu())   # reply_markup=inline_menu() - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å inline-–∫–Ω–æ–ø–∫–∞–º–∏

@bot.message_handler(commands=['one'])
def handle_one(message: telebot.types.Message):
    user_id = message.chat.id
    init_user_data(message.chat.id)
    user_data[user_id]["selected_ingredients"].clear()  # –ü—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –Ω–æ–≤–æ–≥–æ –≤—ã–±–æ—Ä–∞ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ –æ—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Å–ø–∏—Å–æ–∫
    text = "üîπ –í—ã–±–µ—Ä–∏ –≤—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å —É —Ç–µ–±—è –¥–æ–º–∞:"
    bot.send_message(message.chat.id, text, reply_markup=inline_ingredients())  # reply_markup=inline_ingredients() - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å inline-–∫–Ω–æ–ø–∫–∞–º–∏

@bot.message_handler(commands=['two'])
def handle_two(message: telebot.types.Message):
    init_user_data(message.chat.id)
    text = "üîπ –í—ã–±–µ—Ä–∏ —Å–∞–π—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ä–µ—Ü–µ–ø—Ç–æ–≤: üîπ"
    bot.send_message(message.chat.id, text, reply_markup=inline_site())  # reply_markup=inline_site() - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å inline-–∫–Ω–æ–ø–∫–∞–º–∏

@bot.message_handler(commands=['three'])
def handle_three(message: telebot.types.Message):
    text = "üîπ      –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –æ—Ç —à–µ—Ñ-–ø–æ–≤–∞—Ä–∞:      üîπ"
    bot.send_message(message.chat.id, text, reply_markup=inline_dishes())  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ inline-–∫–Ω–æ–ø–æ–∫ —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –±–ª—é–¥

@bot.message_handler(commands=['news'])
def handle_news(message: telebot.types.Message):
    news_text = "üîî –ù–æ–≤–æ—Å—Ç–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:\n\n" + "\n\n".join(news_and_updates)
    bot.reply_to(message, news_text)

@bot.message_handler(commands=['feedback'])
def handle_feedback(message: telebot.types.Message):
    text = "‚úâ –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–π –æ—Ç–∑—ã–≤ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:"
    bot.send_message(message.chat.id, text, reply_markup=inline_feedback())  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ inline-–∫–Ω–æ–ø–æ–∫ —Å feedback-–∞–º–∏



# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –≤–≤–æ–¥–∞:

@bot.message_handler(content_types=['text'])
def number_way(message: telebot.types.Message):
    a = message.text.strip()
    if a == "1":
        handle_one(message)
    elif a == "2":
        handle_two(message)
    elif a == "3":
        handle_three(message)
    else:
        bot.reply_to(message, f"–ß—Ç–æ –∑–∞ '{a}'? \n–°–æ–±–µ—Ä–∏—Å—å –º—ã—Å–ª—è–º–∏ –∏ –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞! \n–í–≤–µ–¥–∏ 1, 2 –∏–ª–∏ 3. –õ–∏–±–æ –≤–µ—Ä–Ω–∏—Å—å –≤ '–ù–∞—á–∞–ª–æ'.")



# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è Inline-–∫–Ω–æ–ø–æ–∫:

@bot.callback_query_handler(func=lambda call: True)
def inline_button_handler(call):
    user_id = call.message.chat.id
    init_user_data(user_id)
    button = call.data       # –ü–æ–ª—É—á–∞–µ–º callback_data

    sites = {
        "site_1000menu": "1000.menu",
        "site_iamcook": "iamcook.ru",
        "site_edaru": "eda.ru"
    }

    # –î–ª—è –∫–Ω–æ–ø–æ–∫ –≤—ã–±–æ—Ä–∞ "–ø—É—Ç–∏":

    if button == "first":
        user_data[user_id]["selected_ingredients"].clear()  # –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –Ω–æ–≤–æ–≥–æ –≤—ã–±–æ—Ä–∞ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤
        text = "üîπ –í—ã–±–µ—Ä–∏ –≤—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å —É —Ç–µ–±—è –¥–æ–º–∞: üîπ"
        bot.send_message(call.message.chat.id, text, reply_markup=inline_ingredients())  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ inline-–∫–Ω–æ–ø–æ–∫ —Å –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º–∏
    elif button == "second":
        text = "üîπ –í—ã–±–µ—Ä–∏ —Å–∞–π—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ä–µ—Ü–µ–ø—Ç–æ–≤: üîπ"
        bot.send_message(call.message.chat.id, text, reply_markup=inline_site()) # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ inline-–∫–Ω–æ–ø–æ–∫ —Å —Å–∞–π—Ç–∞–º–∏
    elif button == "third":
        text = "üîπ      –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –æ—Ç —à–µ—Ñ-–ø–æ–≤–∞—Ä–∞:      üîπ"
        bot.send_message(call.message.chat.id, text, reply_markup=inline_dishes())  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ inline-–∫–Ω–æ–ø–æ–∫ —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –±–ª—é–¥

    # –î–ª—è –∫–Ω–æ–ø–æ–∫ –≤—ã–±–æ—Ä–∞ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤:

    elif button in ingredients:
        user_data[user_id]["selected_ingredients"].add(call.data)
        bot.answer_callback_query(call.id, text = f"–î–æ–±–∞–≤–ª–µ–Ω–æ: {call.data}")

    elif button == "done":
        bot.answer_callback_query(call.id, text="–í—ã–±–æ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω!")
        selected = user_data[user_id]["selected_ingredients"]        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
        if not selected:    # –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç–æ–π
            bot.send_message(user_id, f"–ù–∏—á–µ–≥–æ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ!")
        else:
            selected_ingredients(user_id, selected)     # –ü–µ—Ä–µ–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ `selected` –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ 'selected_ingredients'

    # –î–ª—è –∫–Ω–æ–ø–æ–∫ –≤—ã–±–æ—Ä–∞ –±–ª—é–¥–∞:

    elif button in menu:
        ingredients_for_dish = "\nüî∏".join(menu[button]["–∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã"])   # –ü–æ–ª—É—á–∞–µ–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –∏–∑ —Å–ª–æ–≤–∞—Ä—è menu
        recipe = "\nüî∏".join(menu[button]["—Ä–µ—Ü–µ–ø—Ç"])                      # –ü–æ–ª—É—á–∞–µ–º —Ä–µ—Ü–µ–ø—Ç –∏–∑ —Å–ª–æ–≤–∞—Ä—è menu
        bot.send_message(call.message.chat.id, f"<b>\"{button}\"</b>\n\n"
                                               f"–ò–ù–ì–†–ï–î–ò–ï–ù–¢–´:\nüî∏{ingredients_for_dish}\n\n"
                                               f"–°–ü–û–°–û–ë –ü–†–ò–ì–û–¢–û–í–õ–ï–ù–ò–Ø:\nüî∏{recipe}\n\n"
                                               f".................................................................", parse_mode = "HTML")
                                               # <b>...</b> –∏ parse_mode = "HTML" - HTML-—Ä–∞–∑–º–µ—Ç–∫–∞ –¥–ª—è –∂–∏—Ä–Ω–æ–≥–æ —à—Ä–∏—Ñ—Ç–∞

    # –î–ª—è feedback-–∫–Ω–æ–ø–æ–∫:

    elif button == "write":
        bot.send_message(user_id, "–í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞:")
        bot.register_next_step_handler(call.message, get_recipe_name) # –ü–µ—Ä–µ–¥–∞–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥—Ä—É–≥–æ–º—É –æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É 'get_recipe_name'

    elif button == "complaint":
        bot.send_message(call.message.chat.id, "ü§£ –ê –±–æ–ª—å—à–µ —Ç—ã –Ω–∏—á–µ–≥–æ –Ω–µ —Ö–æ—á–µ—à—å?")

    elif button == "cancel":
        text = "–ï—Å–ª–∏ —Ç–µ–±—è –≤—Å—ë —É—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç, —Ç–æ–≥–¥–∞ —Ç—ã —É–∂–µ –∑–Ω–∞–µ—à—å, —á—Ç–æ –¥–µ–ª–∞—Ç—å"
        bot.send_message(call.message.chat.id, text, reply_markup=inline_menu())

    # –î–ª—è –∫–Ω–æ–ø–æ–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∞–¥–º–∏–Ω—É:

    elif button == "send_recipe":
        recipe = user_data[user_id]["recipe_from_user"] # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
        recipe_text = f"*‚ùó –ù–æ–≤—ã–π —Ä–µ—Ü–µ–ø—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ‚ùó*\n\n" \
                      f"*–ù–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞* - {recipe['–ù–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞']}\n\n" \
                      f"*–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:* \n{', '.join(recipe['–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã'])}\n\n" \
                      f"*–°–ø–æ—Å–æ–± –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è:* \n{recipe['–°–ø–æ—Å–æ–± –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è']}"
        bot.send_message(ADMIN_ID, recipe_text, parse_mode="Markdown")
        bot.send_message(user_id, "‚úÖ –¢–≤–æ–π —Ä–µ—Ü–µ–ø—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω—É! –°–ø–∞—Å–∏–±–æ!")
        user_data[user_id]["recipe_from_user"].clear()  # –û—á–∏—â–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ "recipe_from_user" –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    elif button == "cancel_recipe":
        bot.send_message(user_id, handle_feedback(call.message))

    # –î–ª—è –∫–Ω–æ–ø–æ–∫ –≤—ã–±–æ—Ä–∞ —Å–∞–π—Ç–∞:

    elif button in sites:
        site = sites[button]  # –ü–æ–ª—É—á–∞–µ–º —Å–∞–π—Ç –∏–∑ —Å–ª–æ–≤–∞—Ä—è
        bot.send_message(call.message.chat.id, f"–û—Ç–ª–∏—á–Ω–æ! –ë—É–¥—É –∏—Å–∫–∞—Ç—å –Ω–∞ {site}\n"
                                               f"–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞:")
        bot.register_next_step_handler(call.message, lambda msg: search_recipe_on_site(msg, site))



# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ—Å–ª–µ –ø–µ—Ä–≤–∏—á–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤:

def selected_ingredients(user_id, selected):

    possible_dishes = []    # —Å–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –±–ª—é–¥ –∏–∑ menu —à–µ—Ñ-–ø–æ–≤–∞—Ä–∞
    for name_dish, preparation in menu.items():
        if set(preparation["–∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã"]).issubset(set(selected)):
            possible_dishes.append(name_dish)

    ingredients_sets = [{'—Å–æ–ª—å', '—Ö–ª–µ–±', '–≤–æ–¥–∞'}]  # —Å–ø–∏—Å–æ–∫ –º–Ω–æ–∂–µ—Å—Ç–≤–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∏–∑ –∫–Ω–æ–ø–æ–∫ '—Å–æ–ª—å', '—Ö–ª–µ–±' –∏ '–≤–æ–¥–∞'

    selected_str = ", ".join(selected)
    bot.send_message(user_id, f"<b>–°–ø–∏—Å–æ–∫ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤:</b>\n{selected_str}", parse_mode = "HTML")
    if possible_dishes:
        text = "üîπ           –¢—ã –º–æ–∂–µ—à—å –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å:           üîπ"
        bot.send_message(user_id, text, reply_markup=inline_possible_dishes(possible_dishes))  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ inline-–∫–Ω–æ–ø–æ–∫ —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –±–ª—é–¥
    elif selected_str == '–≤–æ–¥–∞':
        bot.send_message(user_id, "–ü–µ–π –≤–æ–¥–∞, –µ—à—å –≤–æ–¥–∞ - —Å—Ä..—Ç—å –Ω–µ –±—É–¥–µ—à—å –Ω–∏–∫–æ–≥–¥–∞!")
    elif selected_str == '—Ö–ª–µ–±':
        bot.send_message(user_id, "–•–ª–µ–± - –≤—Å–µ–º—É –≥–æ–ª–æ–≤–∞!")
    elif selected_str == '—Å–æ–ª—å':
        bot.send_message(user_id, "–û–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ–µ —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ 250 –≥—Ä–∞–º–º —Å–æ–ª–∏, –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –ª–µ—Ç–∞–ª—å–Ω–æ–º—É –∏—Å—Ö–æ–¥—É!\n"
                                  "P.S. –ü–∏—â–µ–≤–æ–π —Å–æ–ª–∏, –µ—Å–ª–∏ —á—Ç–æ.")
    elif set(selected) == {'—Å–æ–ª—å', '—Ö–ª–µ–±'}:
        bot.send_message(user_id, "–•–ª–µ–± —Å —Å–æ–ª—å—é –¥–æ–µ–¥–∞–µ—à—å? –¢—è–∂—ë–ª—ã–µ —É —Ç–µ–±—è –≤—Ä–µ–º–µ–Ω–∞. –ú–æ–≥—É —Ç–æ–ª—å–∫–æ –ø–æ—Å–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—åüò¢")
    elif set(selected) == {'–≤–æ–¥–∞', '—Ö–ª–µ–±'}:
        bot.send_message(user_id, "–•–ª–µ–± ‚Äì —Ç–≤—ë—Ä–¥—ã–π, –≤–æ–¥–∞ ‚Äì –∂–∏–¥–∫–∞—è. –î–æ–±–∞–≤—å —É—Å–∏–ª–∏–π ‚Äì –ø–æ–ª—É—á–∏—à—å –∫–∞—à—É. –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∞–ø–ø–µ—Ç–∏—Ç–∞!")
    elif set(selected) == {'–≤–æ–¥–∞', '—Å–æ–ª—å'}:
        bot.send_message(user_id, "–°–æ–ª—å –≤ –≤–æ–¥–µ ‚Äì —ç—Ç–æ –∫–∞–∫ —à—É—Ç–∫–∞: –µ—Å–ª–∏ –º–∞–ª–æ ‚Äì –Ω–µ —Å–º–µ—à–Ω–æ, –µ—Å–ª–∏ –º–Ω–æ–≥–æ ‚Äì –Ω–µ–ø—Ä–∏—è—Ç–Ω–æ.")
    elif set(selected) in ingredients_sets:
        bot.send_message(user_id, "–ê –µ—Å–ª–∏ –µ—â—ë –∏ —Å–≤–µ—á–∏ –Ω–∞–π–¥—ë—à—å, —Ç–æ –º–æ–∂–Ω–æ —É—Å—Ç—Ä–æ–∏—Ç—å –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–π —É–∂–∏–Ω –ø—Ä–∏ —Å–≤–µ—á–∞—Ö. Think about it!üòÑ")
    else:
        bot.send_message(user_id, "–ù–∏—á–µ–≥–æ –Ω–µ –º–æ–≥—É –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å. –ü—Ä–æ—Å—Ç–æ —Å—ä–µ—à—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã!")

def search_recipe_on_site(message: telebot.types.Message, site: str):
    input_text = message.text.strip()
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
    commands = {
        "/description": handle_description,
        "/start": tutorial,
        "/one": handle_one,
        "/two": handle_two,
        "/three": handle_three,
        "/news": handle_news,
        "/feedback": handle_feedback
    }
    if input_text in commands:
        return commands[input_text](message)
    elif input_text in ["1", "2", "3"]:
        return number_way(message)
    else:
        # –ò—â–µ–º —Ä–µ—Ü–µ–ø—Ç—ã —á–µ—Ä–µ–∑ Google Custom Search API
        bot.send_message(message.chat.id, "üîé  –ò—â—É —Ä–µ—Ü–µ–ø—Ç—ã ...")
        recipes = search_recipes(input_text, site)
        if recipes == ["–†–µ—Ü–µ–ø—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!"]:
            bot.send_message(message.chat.id, "–†–µ—Ü–µ–ø—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!\n"
                                              "–ü—Ä–æ–≤–µ—Ä—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è –∏–ª–∏ –≤–≤–µ–¥–∏ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞:")
            bot.register_next_step_handler(message, lambda msg: search_recipe_on_site(msg, site))  # –ó–∞–ø—Ä–æ—Å –Ω–æ–≤–æ–≥–æ –≤–≤–æ–¥–∞
        else:
            bot.send_message(message.chat.id, "\n".join(recipes))  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã



# –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã –Ω–æ–≤–æ–≥–æ —Ä–µ—Ü–µ–ø—Ç–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:

def get_recipe_name(message):
    user_id = message.chat.id
    user_data[user_id]["recipe_from_user"]["–ù–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞"] = message.text         # –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ª–æ–≤–∞—Ä—å –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞
    bot.send_message(user_id, "–ù–∞–ø–∏—à–∏ –≤—Å–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é):")
    bot.register_next_step_handler(message, get_ingredients)         # –ü–µ—Ä–µ–¥–∞–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É 'get_ingredients'

def get_ingredients(message):
    user_id = message.chat.id
    ingred = message.text.split(",")                                 # –†–∞–∑–¥–µ–ª—è–µ–º –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —Å–ø–∏—Å–æ–∫ –ø–æ–¥—Å—Ç—Ä–æ–∫
    user_data[user_id]["recipe_from_user"]["–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã"] = [ing.strip() for ing in ingred]
    bot.send_message(user_id, "–ù–∞–ø–∏—à–∏ —Å–ø–æ—Å–æ–± –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è (–≤ —Å–≤–æ–±–æ–¥–Ω–æ–π —Ñ–æ—Ä–º–µ):")
    bot.register_next_step_handler(message, get_cooking_method)   # –ü–µ—Ä–µ–¥–∞–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É 'get_cooking_method'

def get_cooking_method(message):
    user_id = message.chat.id
    user_data[user_id]["recipe_from_user"]["–°–ø–æ—Å–æ–± –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è"] = message.text

    recipe = user_data[user_id]["recipe_from_user"]
    recipe_text = f"–ü—Ä–æ–≤–µ—Ä—å, –≤—Å—ë –ª–∏ –≤–µ—Ä–Ω–æ\n\n" \
                  f"*–ù–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞* - {recipe['–ù–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞']}\n\n" \
                  f"*–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:*\n{', '.join(recipe['–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã'])}\n\n" \
                  f"*–°–ø–æ—Å–æ–± –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è:*\n{recipe['–°–ø–æ—Å–æ–± –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è']}\n\n" \
                  f"–û—Ç–ø—Ä–∞–≤–∏—Ç—å —ç—Ç–æ—Ç —Ä–µ—Ü–µ–ø—Ç –∞–¥–º–∏–Ω—É?"

    bot.send_message(user_id, recipe_text, parse_mode="Markdown", reply_markup=inline_send_recipe_to_admin())
    # parse_mode = "Markdown" —É–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ —Ç–µ–∫—Å—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç Markdown-—Ä–∞–∑–º–µ—Ç–∫—É, –ø–æ–∑–≤–æ–ª—è—é—â—É—é –∏–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç:
    # –ñ–∏—Ä–Ω—ã–π - *—Ç–µ–∫—Å—Ç* , –ö—É—Ä—Å–∏–≤ - _—Ç–µ–∫—Å—Ç_ , –ú–æ–Ω–æ—à–∏—Ä–∏–Ω–Ω—ã–π - `—Ç–µ–∫—Å—Ç` , –°—Å—ã–ª–∫–∞ - [—Ç–µ–∫—Å—Ç](—Å—Å—ã–ª–∫–∞)



# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ –≤—ã—è–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫, –ø—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏–∏ —Å–±–æ—è (–≤ —Ñ–∞–π–ª–µ bot_errors.log –∏ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ
# –¥–æ–ª–∂–Ω–∞ –ø–æ—è–≤–∏—Ç—å—Å—è –ø–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–∏—á–∏–Ω–µ –æ—à–∏–±–∫–∏):

logging.basicConfig(
    level=logging.ERROR,
    filename="bot_errors.log",
    filemode="a",
    format="%(asctime)s - %(levelname)s - %(message)s"
)

while True:
    try:
        bot.polling(none_stop=True, timeout=60, long_polling_timeout=60)
    except telebot.apihelper.ApiException as e: # –õ–æ–≤–∏—Ç –æ—à–∏–±–∫–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å API Telegram
        logging.error(f"ApiException: {e}")     # –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É –≤ bot_errors.log
        print(f"ApiException: {e}")             # –í—ã–≤–æ–¥ –æ—à–∏–±–∫–∏ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
        time.sleep(5)                           # –ï—Å–ª–∏ –±–æ—Ç –ø–∞–¥–∞–µ—Ç —Å –æ—à–∏–±–∫–æ–π, —Ç–æ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ –æ–Ω —Å–Ω–æ–≤–∞ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è
    except Exception as e:                      # –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –ª—é–±—ã–µ –¥—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏
        logging.error(f"–î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞: {e}")
        print(f"–î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞: {e}")
        time.sleep(5)                           # –ë–æ—Ç —Å–Ω–æ–≤–∞ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥